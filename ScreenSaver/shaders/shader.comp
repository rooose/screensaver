#version 450

struct FluidNoise {
    float noise;
};

layout (binding = 0) uniform ParameterUBO {
    float deltaTime;
} ubo;

layout(std140, binding = 1) readonly buffer NoiseSSBOIn {
   FluidNoise noiseIn[ ]; // local_size_y X local_size_x
};

layout(std140, binding = 2) buffer NoiseSSBOOut {
   FluidNoise noiseOut[ ]; // local_size_y X local_size_x
};

// local_size_n = work group size = number of items in work group ( = 64)
layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

void main() 
{
    // gl_GlobalInvocationID.x = [0, 7]
    // gl_GlobalInvocationID.y = [0, 7]
    // gl_NumWorkGroups.x = 1
    // gl_WorkGroupSize.x = 8
    // equivalent a: x + (y * length)
    uint idx = gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x); // Sascha Willems style
    noiseOut[idx].noise = 1 - noiseIn[idx].noise;
}
